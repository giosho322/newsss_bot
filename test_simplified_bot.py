#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from parsers.telegram_parser import TelegramParser
from database.db import init_db, get_user_channels, get_user_news_count
from bot.admin import is_admin

def test_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä"""
    print("=== –¢–ï–°–¢ –ü–ê–†–°–ï–†–ê ===")
    
    parser = TelegramParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞
    test_channel = "https://t.me/tproger"
    posts = parser.parse_channel(test_channel, limit=5)
    
    print(f"–ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
    for i, post in enumerate(posts, 1):
        print(f"{i}. {post.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:50]}...")
        print(f"   –ö–∞–Ω–∞–ª: {post.get('channel', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')}")
        print(f"   –î–∞—Ç–∞: {post.get('date', '–ù–µ—Ç –¥–∞—Ç—ã')}")
        print()

def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("=== –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = 1203425573
    channels = get_user_channels(user_id)
    news_count = get_user_news_count(user_id)
    
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}:")
    print(f"  –ö–∞–Ω–∞–ª–æ–≤: {len(channels) if channels else 0}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {news_count}")
    
    if channels:
        print("  –ö–∞–Ω–∞–ª—ã:")
        for channel in channels[:3]:
            print(f"    - {channel}")

def test_admin():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("=== –¢–ï–°–¢ –ê–î–ú–ò–ù–ö–ò ===")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∞
    admin_id = 1203425573
    non_admin_id = 123456789
    
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin_id} - –∞–¥–º–∏–Ω: {is_admin(admin_id)}")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {non_admin_id} - –∞–¥–º–∏–Ω: {is_admin(non_admin_id)}")

def test_top_news():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø –Ω–æ–≤–æ—Å—Ç–µ–π"""
    print("=== –¢–ï–°–¢ –¢–û–ü –ù–û–í–û–°–¢–ï–ô ===")
    
    parser = TelegramParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
    channels = [
        "https://t.me/tproger",
        "https://t.me/rbc_news",
        "https://t.me/lenta_ru"
    ]
    
    posts = parser.get_popular_posts(channels, limit_per_channel=3)
    
    print(f"–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
    print("–ü–µ—Ä–≤—ã–µ 5 –ø–æ—Å—Ç–æ–≤:")
    for i, post in enumerate(posts[:5], 1):
        print(f"{i}. {post.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:60]}...")
        print(f"   –ö–∞–Ω–∞–ª: {post.get('channel', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')}")

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–ü–†–û–©–ï–ù–ù–û–ì–û –ë–û–¢–ê")
    print("=" * 50)
    
    try:
        test_parser()
        print()
        test_database()
        print()
        test_admin()
        print()
        test_top_news()
        print()
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
